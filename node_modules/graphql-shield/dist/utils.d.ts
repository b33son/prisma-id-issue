import { ShieldRule, IRules, ILogicRule, IRuleFieldMap } from './types';
import { Rule } from './rules';
/**
 *
 * @param x
 *
 * Makes sure that a certain field is a rule.
 *
 */
export declare function isRule(x: any): x is Rule;
/**
 *
 * @param x
 *
 * Makes sure that a certain field is a logic rule.
 *
 */
export declare function isLogicRule(x: any): x is ILogicRule;
/**
 *
 * @param x
 *
 * Makes sure that a certain field is a rule or a logic rule.
 *
 */
export declare function isRuleFunction(x: any): x is ShieldRule;
/**
 *
 * @param x
 *
 * Determines whether a certain field is rule field map or not.
 *
 */
export declare function isRuleFieldMap(x: any): x is IRuleFieldMap;
/**
 *
 * @param ruleTree
 *
 * Extracts rules from rule tree.
 *
 */
export declare function extractRules(ruleTree: IRules): Rule[];
/**
 *
 * @param ruleTree
 *
 * Validates the rule tree declaration by checking references of rule
 * functions. We deem rule tree valid if no two rules with the same name point
 * to different rules.
 *
 */
export declare function validateRules(ruleTree: IRules): IRules;
